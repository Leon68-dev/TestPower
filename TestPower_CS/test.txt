Не смог побороть любопытства и протестировал следующую программу на Visual C++ из Visual Studio.NET против Borland C++ Builder 6.0. 
Программа простенькая, не Lame конечно же, но всё же:

#include "stdafx.h"

#include <math.h>
#include <stdio.h>
#include <conio.h>
#include "windows.h"

extern double check()
{
enum { size = 2048 };
double x[size], y[size], z[size];
double a = 0, b = -100, c = 100;
for ( int times = 0; times < 1000; times++ )
{
for ( int i = 0; i < size; i++ )
{
x[i] = times * i;
y[i] = GetTickCount() / (x[i]+1);
z[i] = (x[i] + y[i] / 2) + 4;
};
for ( int i = 0; i < size; i++ )
{
a = x[i] + a;
b = y[i] + b + 1;
c = z[i] + sin( double( x[i] + z[i] ) / (a + 1) );
};
};
return a + b + c;
};

int main(int argc, char* argv[])
{
printf( "press any key to start...\n" );
getch();
DWORD time = GetTickCount();
check();
time = GetTickCount() - time;
printf( "time: %i. press any key to exit...\n", time );
getch();
return 0;
};

В обоих средах сперва компилил в DEBUG, потом в RELEASE конфигах особо по настройкам не лазая. Результатом является количество миллисекунд, которое прога выполняется (на пне 4-ом). Вот результаты:

BCB DEBUG: 600
BCB RELEASE: 550
VC++ DEBUG: 640
VC++ RELEASE: 300

//**************************************************************************************************

using System;

namespace ManagedSpeedTest
{
/// <summary>
/// Summary description for Class1.
/// </summary>
class Class1
{
  public const int size = 2048;
  public static double check()
  {
  double[] x, y, z;
  x = new double[size];
  y = new double[size];
  z = new double[size];
  double a = 0, b = -100, c = 100;
  for ( int times = 0; times < 1000; times++ )
  {
    for ( int i = 0; i < size; i++ )
    {
    x[i] = times * i;
    y[i] = Environment.TickCount / (x[i]+1);
    z[i] = (x[i] + y[i] / 2) + 4;
    };
    for ( int i = 0; i < size; i++ )
    {
    a = x[i] + a;
    b = y[i] + b + 1;
    c = z[i] + Math.Sin( ( x[i] + z[i] ) / (a + 1) );
    };
  };
  return a + b + c;
  }
  /// <summary>
  /// The main entry point for the application.
  /// </summary>
  [STAThread]
  static void Main(string[] args)
  {
  //
  // TODO: Add code to start application here
  //
  Console.WriteLine( "press any key to start...\n" );
  Console.ReadLine();
  int time = Environment.TickCount;
  double val = check();
  time = Environment.TickCount  - time;
  Console.WriteLine( "time: " + time + " value = " + val + ". press any key to exit...\n" );
  Console.ReadLine();
  }
}
}


C# DEBUG: 421
C# RELEASE: 391
